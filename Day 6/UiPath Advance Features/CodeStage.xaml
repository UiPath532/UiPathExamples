<Activity mc:Ignorable="sap sap2010" x:Class="CodeStage" VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="1073,924" sap2010:WorkflowViewState.IdRef="CodeStage_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Excel.Activities.Business</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.CSV</x:String>
      <x:String>UiPath.CSV.Activities</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.Python.Activities</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>UiPath.Python</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="CodeStage" sap:VirtualizedContainerService.HintSize="512,859" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="sd:DataTable" Name="vData" />
      <Variable x:TypeArguments="sd:DataTable" Name="vDtResult" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:ReadCsvFile PathResource="{x:Null}" DataTable="[vData]" Delimitator="Comma" DelimitatorForViewModel="Comma" DisplayName="Read CSV" FilePath="Book1.csv" sap:VirtualizedContainerService.HintSize="450,186" sap2010:WorkflowViewState.IdRef="ReadCsvFile_1" />
    <ui:InvokeCode ContinueOnError="{x:Null}" Code="&#xD;&#xA;        try&#xD;&#xA;        {&#xD;&#xA;            //DataTable with 2 columns: &quot;product_name&quot; and &quot;price&quot;&#xD;&#xA;        &#xD;&#xA;&#xD;&#xA;            // Get the grouped data with summed prices&#xD;&#xA;             result = GroupAndSumDataTable(dt);&#xD;&#xA;&#xD;&#xA;            // Display the result&#xD;&#xA;            foreach (DataRow row in result.Rows)&#xD;&#xA;            {&#xD;&#xA;                //Console.WriteLine($&quot;Product: {row[&quot;product_name&quot;]}, Total Price: {row[&quot;price&quot;]}&quot;);&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;        catch (Exception ex)&#xD;&#xA;        {&#xD;&#xA;            Console.WriteLine($&quot;An error occurred: {ex.Message}&quot;);&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;&#xD;&#xA;    static DataTable GroupAndSumDataTable(DataTable dt)&#xD;&#xA;    {&#xD;&#xA;        // Create a new DataTable to store the result&#xD;&#xA;        DataTable result = new DataTable();&#xD;&#xA;        result.Columns.Add(&quot;product_name&quot;, typeof(string));&#xD;&#xA;        result.Columns.Add(&quot;price&quot;, typeof(double));&#xD;&#xA;&#xD;&#xA;        try&#xD;&#xA;        {&#xD;&#xA;            // Validate the input DataTable&#xD;&#xA;            if (!dt.Columns.Contains(&quot;product_name&quot;))&#xD;&#xA;            {&#xD;&#xA;                throw new ArgumentException(&quot;The input DataTable must contain a 'product_name' column.&quot;);&#xD;&#xA;            }&#xD;&#xA;&#xD;&#xA;            if (!dt.Columns.Contains(&quot;price&quot;))&#xD;&#xA;            {&#xD;&#xA;                throw new ArgumentException(&quot;The input DataTable must contain a 'price' column.&quot;);&#xD;&#xA;            }&#xD;&#xA;&#xD;&#xA;            // Create a new DataTable with the correct types for processing&#xD;&#xA;            DataTable processedDt = new DataTable();&#xD;&#xA;            processedDt.Columns.Add(&quot;product_name&quot;, typeof(string));&#xD;&#xA;            processedDt.Columns.Add(&quot;price&quot;, typeof(double));&#xD;&#xA;&#xD;&#xA;            // Convert price column to double and copy data to the new DataTable&#xD;&#xA;            foreach (DataRow row in dt.Rows)&#xD;&#xA;            {&#xD;&#xA;                string productName = row[&quot;product_name&quot;].ToString();&#xD;&#xA;                double price;&#xD;&#xA;                if (!double.TryParse(row[&quot;price&quot;].ToString(), out price))&#xD;&#xA;                {&#xD;&#xA;                    throw new InvalidCastException($&quot;Unable to cast value '{row[&quot;price&quot;]}' to type 'System.Double'.&quot;);&#xD;&#xA;                }&#xD;&#xA;                processedDt.Rows.Add(productName, price);&#xD;&#xA;            }&#xD;&#xA;&#xD;&#xA;            // Group data by &quot;product_name&quot; and sum the &quot;price&quot; column&#xD;&#xA;            var groupedData = from row in processedDt.AsEnumerable()&#xD;&#xA;                              group row by row.Field&lt;string&gt;(&quot;product_name&quot;) into g&#xD;&#xA;                              select new&#xD;&#xA;                              {&#xD;&#xA;                                  ProductData = g.Key,&#xD;&#xA;                                  TotalPrice = g.Sum(r =&gt; r.Field&lt;double&gt;(&quot;price&quot;))&#xD;&#xA;                              };&#xD;&#xA;&#xD;&#xA;            // Add the grouped data to the result DataTable&#xD;&#xA;            foreach (var item in groupedData)&#xD;&#xA;            {&#xD;&#xA;                result.Rows.Add(item.ProductData, item.TotalPrice);&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;        catch (Exception ex)&#xD;&#xA;        {&#xD;&#xA;            Console.WriteLine($&quot;An error occurred while processing the data: {ex.Message}&quot;);&#xD;&#xA;            throw;  // Re-throw the exception to be handled by the calling code&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        return result;&#xD;&#xA;    }&#xD;&#xA;" DisplayName="Invoke Code" sap:VirtualizedContainerService.HintSize="450,197" sap2010:WorkflowViewState.IdRef="InvokeCode_1" Language="CSharp">
      <ui:InvokeCode.Arguments>
        <InArgument x:TypeArguments="sd:DataTable" x:Key="dt">[vData]</InArgument>
        <OutArgument x:TypeArguments="sd:DataTable" x:Key="result ">[vDtResult]</OutArgument>
      </ui:InvokeCode.Arguments>
    </ui:InvokeCode>
    <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[vDtResult]" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="450,388" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
      <ui:ForEachRow.Body>
        <ActivityAction x:TypeArguments="sd:DataRow">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="416,201" sap2010:WorkflowViewState.IdRef="Sequence_2">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:String" Name="vProduct" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="354,113" sap2010:WorkflowViewState.IdRef="WriteLine_1" Text="[&quot;Product Name: &quot; +  CurrentRow(0).ToString() + &quot;Sum of Price&quot; + CurrentRow(1).ToString()]" />
          </Sequence>
        </ActivityAction>
      </ui:ForEachRow.Body>
    </ui:ForEachRow>
  </Sequence>
</Activity>